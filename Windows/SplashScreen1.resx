<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picLogoTracker.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAI0AAAC/CAYAAADD7F8DAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAPCUlEQVR4Xu2dC4xcVRnHCy1F
        C9gXBcq7gBUJyCMEsEAKkapREJDSCEJs06ZUJUIUaoNRSlIJVpAaiFaivCUVaigQBFHkJY8gDyEIAURR
        yvspL3mV9fddv9uc/fbM7JzdO3fu3Pn+yS+ze75z7j1zzq+7c2dmpyP6+vpGXHbfp2+GvhLYdoSn++PS
        eJLj0niS49J4kuPSeJLj0niS49J4klNVacZ+6cyZcGIJfExP6Wk1FZbmZugrAf/plxqXxqVJjkvj0iTH
        pXFpkuPSuDTJcWlcmuS4NC5NclwalyY5Lo1LkxyXxqVJjkvj0iTHpXFpkuPSuDTJUWk2kw0tgVF62kHD
        Zro0VY1IU8WwmS5NVePSuDTJcWlcmuS4NC5NclwalyY5Lo1LkxyXxqVJjkvj0iTHpXFpkuPSuDTJcWlc
        muS4NC5NclwalyY5Ig0LdzwsK5gVcL9hOcT6xlgNsU0umvMhdv5kdEnrH5WmrH/VtUaXtP5xaYpDl7T+
        cWmKQ5e0/nFpikOXtP5xaYpDl7T+cWmKQ5e0/nFpikOXtP5xaYpDl7T+cWmKQ5e0/nFpikOXtP5xaYpD
        l7T+cWmKQ5e0/nFpikOXtP5xaYpDl7T+cWmKQ5e0/nFpikOXtP4pWZqVcGGLPAexYxRNypyaokta/5Qs
        TctvraRv5ebk0bg0Lk1yXBqXJjkujUuTHJfGpUmOS+PSJMelcWmS49K4NMlxabpbmskLrjkIFhsO0HJ7
        4tJ0rzTIsS38B/oMi7VLe+LSdKc0iDESbg9EcWno69I0CWKcakQJcWnaTNdJgxTT4INAEotL02a6ShqE
        GAv/CAQR3jTfuzRtptukucwIcj8cZ9pcmjbTNdIgwzFGjrfhkzA7aBNcmjbTFdIgwnbweiCGsEBrLo2E
        vi6NBglGwR2BFMJVWnZp8tDXpdEgwWlGimdgYy27NHno69IQBNgP1gRCCDO0nIXvXRoJfXteGjZ/HPwr
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xk7jVgAAAABJRU5ErkJggg==
</value>
  </data>
</root>